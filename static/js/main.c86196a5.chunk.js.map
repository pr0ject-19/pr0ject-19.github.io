{"version":3,"sources":["assets/icons/left-arrow.svg","data.js","context.js","Pages/Home/Home.js","Pages/Details/Details.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","intro","title","description","list","id","img_url","bg_color","Context","React","createContext","Provider","state","itemForDetailPage","cords","windowScrollPosition","getDetailPageItem","setState","find","item","getCords","document","getElementById","getBoundingClientRect","window","scrollY","value","this","props","children","Component","Consumer","Home","styles","context","scrollTo","transform","x","y","width","innerWidth","height","backgroundColor","opacity","animationFillMode","animation","transition","setTimeout","borderRadius","className","map","key","style","to","onClick","src","alt","contextType","Details","maxWidth","match","params","itemId","history","goBack","Back","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c86196a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left-arrow.0a353697.svg\";","export const intro = {\n  title: \"Welcome to Covid19-Information center!!!\",\n  description: \"Select any service to view its details.\"\n};\n\nexport const list = [\n  {\n    id: \"news\",\n    title: \"News\",\n    img_url: \"../images/news.jpg\",\n    bg_color: \"#ffa21c\",\n  },\n  {\n    id: \"symptoms\",\n    title: \"Symptoms\",\n    img_url: \"../images/symptoms.png\",\n    bg_color: \"#d2e8f2\",\n  },\n  {\n    id: \"prevention\",\n    title: \"Prevention\",\n    img_url: \"../images/prevention.png\",\n    bg_color: \"#d6cc9e\",\n  },\n  {\n    id: \"movies\",\n    title: \"Movies\",\n    img_url: \"../images/movies.jpeg\",\n    bg_color: \"#d64e00\",\n  },\n  {\n    id: \"games\",\n    title: \"Games\",\n    img_url: \"../images/games.jpg\",\n    bg_color: \"#ffe0b5\",\n  },\n  {\n    id: \"statics\",\n    title: \"Statistics\",\n    img_url: \"../images/static.png\",\n    bg_color: \"#9bc6ba\",\n  },\n  {\n    id: \"disc\",\n    title: \"Discussions\",\n    img_url: \"../images/disc.png\",\n    bg_color: \"#e6c5d0\",\n  },\n  {\n    id: \"aboutus\",\n    title: \"AboutUs\",\n    img_url: \"../images/aboutus.jpeg\",\n    bg_color: \"#ffe083\",\n  }\n];\n","import React from \"react\";\nimport { intro, list } from \"./data\";\n\nconst Context = React.createContext();\n\nclass Provider extends React.Component {\n  state = {\n    intro,\n    list,\n    itemForDetailPage: {},\n    cords: {},\n    windowScrollPosition: 0\n  };\n\n  getDetailPageItem = id => {\n    this.setState({\n      itemForDetailPage: this.state.list.find(item => item.id === id)\n    });\n  };\n\n  getCords = id => {\n    this.setState({\n      cords: document.getElementById(id).getBoundingClientRect(),\n      windowScrollPosition: window.scrollY\n    });\n    this.getDetailPageItem(id);\n  };\n\n  render() {\n    return (\n      <Context.Provider\n        value={{\n          ...this.state,\n          getCords: this.getCords,\n          getDetailPageItem: this.getDetailPageItem\n        }}\n      >\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nconst Consumer = Context.Consumer;\n\nexport { Context, Provider, Consumer };\n","import React from \"react\";\nimport \"./Home.scss\";\nimport { Consumer, Context } from \"../../context\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends React.Component {\n  state = {\n    styles: {}\n  };\n  componentDidMount() {\n    if (this.context.itemForDetailPage.id) {\n      window.scrollTo(0, this.context.windowScrollPosition);\n      this.setState(\n        {\n          styles: {\n            transform: `translate(${this.context.cords.x * -1}px, ${this.context\n              .cords.y * -1}px)`,\n            width: window.innerWidth > 991 ? \"40vw\" : \"100vw\",\n            height: window.innerWidth > 991 ? \"100vh\" : \"50vh\",\n            backgroundColor: this.context.itemForDetailPage.bg_color,\n            opacity: \"1\",\n            animationFillMode: \"none\",\n            animation: \"none\",\n            transition: `opacity 0ms`\n          }\n        },\n        () => {\n          setTimeout(() =>\n            this.setState({\n              styles: {\n                opacity: \"1\",\n                animationFillMode: \"none\",\n                animation: \"none\",\n                borderRadius : \"30px\"\n              }\n            })\n          );\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {context => (\n          <div className=\"home-wrapper\">\n            <header className=\"intro\">\n              <h1>{context.intro.title}</h1>\n              <p>{context.intro.description}</p>\n            </header>\n            <div>\n              <ul className=\"list\">\n                {context.list.map(item => (\n                  <li key={item.id} className=\"list-item\">\n                    <Link\n                      style={\n                        this.context.itemForDetailPage.id === item.id\n                          ? this.state.styles\n                          : {}\n                      }\n                      to={`/details/${item.id}`}\n                      id={item.id}\n                      onClick={() => context.getCords(item.id)}\n                    >\n                      <img src={item.img_url} alt={item.title} />\n                      <div\n                        className=\"bg\"\n                        style={{ backgroundColor: item.bg_color }}\n                      />\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        )}\n      </Consumer>\n    );\n  }\n}\nHome.contextType = Context;\nexport default Home;\n","import React from \"react\";\nimport \"./Details.scss\";\nimport { Context } from \"../../context\";\nimport Back from \"../../assets/icons/left-arrow.svg\";\n\nclass Details extends React.Component {\n  state = {\n    styles: {\n      backgroundColor: this.context.itemForDetailPage.bg_color,\n      transform: `translate(${this.context.cords.x}px, ${this.context.cords.y}px)`,\n      maxWidth: `${this.context.cords.width}px`,\n      height: `${this.context.cords.height}px`,\n      borderRadius: \"30px\"\n    }\n  };\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.context.getDetailPageItem(this.props.match.params.itemId);\n    setTimeout(() => {\n      const styles = {\n        backgroundColor: this.context.itemForDetailPage.bg_color\n      };\n      this.setState({ styles });\n    });\n  }\n\n  render() {\n    const { itemForDetailPage } = this.context;\n    const {\n      title,\n      img_url,\n      description\n    } = itemForDetailPage;\n    return (\n      <div className=\"details-wrapper\">\n        <div\n          className=\"img-wrapper\"\n          style={this.state.styles}\n          id={\"img-wrapper\"}\n        >\n          <img src={img_url} alt={title} />\n        </div>\n        <div className=\"details\">\n          <span onClick={this.props.history.goBack} className=\"back\">\n            <img src={Back} alt=\"back\" width={20} />\n            Back to Home\n          </span>\n          <div className=\"detail-box\">\n            <h2>{title}</h2>\n          </div>\n          <div className=\"detail-box\">\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nDetails.contextType = Context;\nexport default Details;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home/Home\";\nimport Details from \"./Pages/Details/Details\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/details/:itemId\" component={Details} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"./context\";\n\nReactDOM.render(\n  <Provider>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}